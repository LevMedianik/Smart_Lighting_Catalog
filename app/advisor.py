"""
AI Advisor ‚Äî –º–æ–¥—É–ª—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.
–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤ –Ω–∞ –ø–æ–Ω—è—Ç–Ω–æ–º –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–º —è–∑—ã–∫–µ.
"""

def generate_advice(recommendations: list, room_params: dict) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –Ω–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ.

    Args:
        recommendations (list): top-N —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ—Ç –º–æ–¥–µ–ª–∏
        room_params (dict): –≤—Ö–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–º–µ—â–µ–Ω–∏—è
    Returns:
        str: —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
    """
    if not recommendations:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è."

    room_type = room_params.get("—Ç–∏–ø_–ø–æ–º–µ—â–µ–Ω–∏—è", "–ø–æ–º–µ—â–µ–Ω–∏–µ")
    lux = room_params.get("—Ü–µ–ª–µ–≤–æ–π_–ª—é–∫—Å", 400)
    cct_pref = room_params.get("cct_–ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ_k", 4000)
    cri_min = room_params.get("cri_min", 80)
    ip_min = room_params.get("ip_min", 40)

    explanation = [
        f"–î–ª—è –≤–∞—à–µ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è ({room_type}) —Å –Ω–æ—Ä–º–æ–π –æ—Å–≤–µ—â—ë–Ω–Ω–æ—Å—Ç–∏ {lux} –ª–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è:"
    ]

    for rec in recommendations:
        brand = rec.get("–±—Ä–µ–Ω–¥", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±—Ä–µ–Ω–¥")
        model = rec.get("—Å–µ—Ä–∏—è", "")
        typ = rec.get("—Ç–∏–ø_—Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∞", "—Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫")
        power = rec.get("–º–æ—â–Ω–æ—Å—Ç—å_–≤—Ç", 0)
        count = rec.get("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–æ–≤", 1)
        cct = rec.get("cct_k", cct_pref)
        cri = rec.get("cri", cri_min)
        ip = rec.get("ip", ip_min)
        eff = rec.get("—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å_–ª–º_–≤—Ç", None)
        price = rec.get("–∏—Ç–æ–≥–æ–≤–∞—è_—Å—Ç–æ–∏–º–æ—Å—Ç—å_‚ÇΩ", None)
        lux_val = rec.get("–æ—Å–≤–µ—â–µ–Ω–Ω–æ—Å—Ç—å_–ª–∫", lux)

        text = (
            f"üí° {brand} {model} ({typ}) ‚Äî {count} —à—Ç. –ø–æ {power:.0f} –í—Ç, "
            f"—Å–æ–∑–¥–∞—ë—Ç –æ—Å–≤–µ—â—ë–Ω–Ω–æ—Å—Ç—å –æ–∫–æ–ª–æ {lux_val:.0f} –ª–∫ –ø—Ä–∏ "
            f"—Ü–≤–µ—Ç–æ–≤–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ {cct}K –∏ CRI‚âà{cri}. "
            f"–°—Ç–µ–ø–µ–Ω—å –∑–∞—â–∏—Ç—ã IP{ip}, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —É—Å–ª–æ–≤–∏–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏."
        )
        if eff:
            text += f" –≠–Ω–µ—Ä–≥–æ—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å ‚âà{eff:.0f} –ª–º/–í—Ç."
        if price:
            text += f" –û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–º–ø–ª–µ–∫—Ç–∞ {price:,.0f} ‚ÇΩ."
        explanation.append(text)

    explanation.append(
        "–í—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –Ω–æ—Ä–º–∞–º –æ—Å–≤–µ—â—ë–Ω–Ω–æ—Å—Ç–∏ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ —Å–≤–µ—Ç–∞."
    )

    return "\n".join(explanation)
