# ==============================================================
# spacy_parser.py
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä –Ω–∞ SpaCy –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–º–µ—â–µ–Ω–∏—è.
# –†–∞–±–æ—Ç–∞–µ—Ç —Å –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤—Ä–æ–¥–µ:
# "–ü–æ–¥–±–µ—Ä–∏ –æ—Å–≤–µ—â–µ–Ω–∏–µ –¥–ª—è –æ—Ñ–∏—Å–∞ 45 –º¬≤, –≤—ã—Å–æ—Ç–∞ 3.2, –±—é–¥–∂–µ—Ç 20000"
# ==============================================================

import re
import spacy

# -------------------------
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SpaCy
# -------------------------
try:
    nlp = spacy.load("ru_core_news_sm")
except Exception as e:
    nlp = None
    print("‚ö†Ô∏è SpaCy model not loaded:", e)


# -------------------------
# –°–ª–æ–≤–∞—Ä—å –ø–æ–º–µ—â–µ–Ω–∏–π (—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–π —Å –¥–∞—Ç–∞—Å–µ—Ç–æ–º)
# -------------------------
ROOM_TYPES = {
    "–æ—Ñ–∏—Å": "–æ—Ñ–∏—Å–Ω–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ",
    "–∫—É—Ö–Ω—è": "–∫—É—Ö–Ω—è",
    "–≥–æ—Å—Ç–∏–Ω–∞—è": "–≥–æ—Å—Ç–∏–Ω–∞—è",
    "—Å–ø–∞–ª—å–Ω—è": "—Å–ø–∞–ª—å–Ω—è",
    "–∑–∞–ª": "—Ç–æ—Ä–≥–æ–≤—ã–π –∑–∞–ª",
    "—Ü–µ—Ö": "—Ü–µ—Ö",
    "—Ä–µ—Å—Ç–æ—Ä–∞–Ω": "—Ä–µ—Å—Ç–æ—Ä–∞–Ω",
    "–∫–∞—Ñ–µ": "–∫–∞—Ñ–µ",
    "—Å–∫–ª–∞–¥": "—Å–∫–ª–∞–¥",
    "–∞—É–¥–∏—Ç–æ—Ä–∏—è": "–∞—É–¥–∏—Ç–æ—Ä–∏—è",
    "–∫–æ—Ä–∏–¥–æ—Ä": "–∫–æ—Ä–∏–¥–æ—Ä",
    "–≤–µ—Å—Ç–∏–±—é–ª—å": "–≤–µ—Å—Ç–∏–±—é–ª—å",
    "—Å–∞–Ω—É–∑–µ–ª": "—Å–∞–Ω—É–∑–µ–ª",
    "–≤–∞–Ω–Ω–∞—è": "–≤–∞–Ω–Ω–∞—è",
    "–ø—Ä–∏—Ö–æ–∂–∞—è": "–ø—Ä–∏—Ö–æ–∂–∞—è",
    "–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è": "–ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è",
    "–º–∞–≥–∞–∑–∏–Ω": "–º–∞–≥–∞–∑–∏–Ω"
}


# -------------------------
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–µ—Ä–∞
# -------------------------
def parse_room_params_spacy(text: str):
    text_clean = text.lower().replace(",", ".")
    room_type = None

    # --- 1. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –ø–æ–º–µ—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ SpaCy ---
    if nlp:
        doc = nlp(text_clean)
        for token in doc:
            lemma = token.lemma_
            if lemma in ROOM_TYPES:
                room_type = ROOM_TYPES[lemma]
                break

    if not room_type:
        room_type = "–æ—Ñ–∏—Å–Ω–æ–µ –ø–æ–º–µ—â–µ–Ω–∏–µ"

    # --- 2. –ü–ª–æ—â–∞–¥—å ---
    area = None
    area_patterns = [
        r"(\d+(?:\.\d+)?)\s*(?:–º2|–º¬≤|–∫–≤\.|–∫–≤–∞–¥—Ä–∞—Ç–Ω|–º–µ—Ç—Ä–æ–≤|–º–µ—Ç—Ä–∞)",
        r"(?:–ø–ª–æ—â–∞–¥[—å—è–∏]|–∫–≤–∞–¥—Ä–∞—Ç—É—Ä–∞)\s*(\d+(?:\.\d+)?)",
        r"(\d+(?:\.\d+)?)\s*–∫–≤–∞–¥—Ä–∞—Ç"
    ]
    for pattern in area_patterns:
        match = re.search(pattern, text_clean)
        if match:
            area = float(match.group(1))
            break

    # --- 3. –í—ã—Å–æ—Ç–∞ ---
    height = None
    height_patterns = [
        r"–≤—ã—Å–æ—Ç[–∞—ã]\s*(?:–ø–æ—Ç–æ–ª–∫–∞|–ø–æ—Ç–æ–ª–∫–æ–≤|)\s*(\d+(?:[.,]\d+)?)",  # –≤—ã—Å–æ—Ç–∞ 2.8, –≤—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–∞ 3.1
        r"–ø–æ—Ç–æ–ª(?:–æ–∫|–∫–∞|–∫–∏)?[^\d]*(\d+(?:[.,]\d+)?)",             # –ø–æ—Ç–æ–ª–∫–∏ 3, –ø–æ—Ç–æ–ª–æ–∫ 2.7
        r"(\d+(?:[.,]\d+)?)\s*(?:–º|–º–µ—Ç—Ä[–∞–æ–≤]*)\s*(?:–≤—ã—Å–æ—Ç[–∞—ã]|–ø–æ—Ç–æ–ª–∫[–∞–∏]*)"  # 2.8 –º –≤—ã—Å–æ—Ç–∞
    ]

    for pattern in height_patterns:
        match = re.search(pattern, text_clean)
        if match:
            try:
                # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ float
                height = float(match.group(1).replace(",", "."))
                break
            except (ValueError, IndexError):
                continue

    # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –≤—ã—Å–æ—Ç–∞
    height = height if height else 3.0


    # --- 4. –ë—é–¥–∂–µ—Ç ---
    budget = None
    budget_patterns = [
        r"–±—é–¥–∂–µ—Ç[–∞-—è ]*(\d+(?:\.\d+)?)",
        r"(\d+(?:\.\d+)?)\s*(?:—Ä—É–±|‚ÇΩ|—Ç—ã—Å)"
    ]
    for pattern in budget_patterns:
        match = re.search(pattern, text_clean)
        if match:
            try:
                budget = int(float(match.group(1)))
                break
            except ValueError:
                continue

    # --- 5. –ß–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è ---
    def to_float(value, default):
        try:
            return float(value)
        except (TypeError, ValueError):
            return float(default)

    area = to_float(area, 20.0)
    height = to_float(height, 3.0)
    budget = int(budget) if budget else 100000

    # --- 6. –í–æ–∑–≤—Ä–∞—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ---
    return {
        "—Ç–∏–ø_–ø–æ–º–µ—â–µ–Ω–∏—è": room_type,
        "–ø–ª–æ—â–∞–¥—å_–º2": area,
        "–≤—ã—Å–æ—Ç–∞_–º": height,
        "—Ü–µ–ª–µ–≤–æ–π_–ª—é–∫—Å": 400,
        "cri_min": 80,
        "cct_–ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ_k": 4000,
        "ip_min": 40,
        "–±—é–¥–∂–µ—Ç_‚ÇΩ": budget
    }


# -------------------------
# –¢–µ—Å—Ç –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ
# -------------------------
if __name__ == "__main__":
    samples = [
        "–ü–æ–¥–±–µ—Ä–∏ —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∏ –¥–ª—è –æ—Ñ–∏—Å–∞ –ø–ª–æ—â–∞–¥—å—é 45 –º2, –≤—ã—Å–æ—Ç–∞ –ø–æ—Ç–æ–ª–∫–∞ 3.2 –º, –±—é–¥–∂–µ—Ç 20000 —Ä—É–±–ª–µ–π",
        "–•–æ—á—É –æ—Å–≤–µ—Ç–∏—Ç—å –∫—É—Ö–Ω—é 25 –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –º–µ—Ç—Ä–æ–≤ —Å –ø–æ—Ç–æ–ª–∫–æ–º 2.8 –º–µ—Ç—Ä–∞ –∏ –±—é–¥–∂–µ—Ç–æ–º 15000",
        "–ù—É–∂–Ω–æ –æ—Å–≤–µ—â–µ–Ω–∏–µ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –∑–∞–ª–∞, –ø–ª–æ—â–∞–¥—å 100 –º¬≤, –≤—ã—Å–æ—Ç–∞ 4 –º–µ—Ç—Ä–∞, –±—é–¥–∂–µ—Ç 50000",
        "–ö–ª–∞—Å—Å–Ω–∞—è –≥–æ—Å—Ç–∏–Ω–∞—è, –∫–≤–∞–¥—Ä–∞—Ç—É—Ä–∞ 30, –ø–æ—Ç–æ–ª–∫–∏ 3 –º–µ—Ç—Ä–∞"
    ]
    for text in samples:
        print(f"\nüó£Ô∏è {text}")
        print(parse_room_params_spacy(text))
